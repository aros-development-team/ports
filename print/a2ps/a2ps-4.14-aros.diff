diff -ruN a2ps-4.14/lib/argmatch.c a2ps-4.14.aros/lib/argmatch.c
--- a2ps-4.14/lib/argmatch.c	2007-12-29 01:37:53.000000000 +0000
+++ a2ps-4.14.aros/lib/argmatch.c	2021-01-19 00:11:50.370000000 +0000
@@ -20,6 +20,7 @@
 
 #include "argmatch.h"
 
+#include <stdlib.h>
 #include <stdio.h>
 #ifdef STDC_HEADERS
 # include <string.h>
diff -ruN a2ps-4.14/lib/obstack.c a2ps-4.14.aros/lib/obstack.c
--- a2ps-4.14/lib/obstack.c	2007-12-29 01:37:54.000000000 +0000
+++ a2ps-4.14.aros/lib/obstack.c	2021-01-19 00:14:51.940000000 +0000
@@ -35,6 +35,7 @@
    program understand `configure --with-gnu-libc' and omit the object
    files, it is simpler to just do this in the source for each such file.  */
 
+#include <stdlib.h>
 #include <stdio.h>		/* Random thing to get __GNU_LIBRARY__.  */
 #if !defined (_LIBC) && defined (__GNU_LIBRARY__) && __GNU_LIBRARY__ > 1
 #include <gnu-versions.h>
diff -ruN a2ps-4.14/lib/pathwalk.c a2ps-4.14.aros/lib/pathwalk.c
--- a2ps-4.14/lib/pathwalk.c	2007-12-29 01:37:54.000000000 +0000
+++ a2ps-4.14.aros/lib/pathwalk.c	2007-12-29 03:28:03.000000000 +0000
@@ -37,6 +37,200 @@
 #include "quotearg.h"
 #include "dirname.h"
 
+#ifdef __AROS__
+
+// copy'n'paste from fnmatch.c.
+
+#include "xfnmatch.h"
+
+# ifndef errno
+extern int errno;
+# endif
+
+/* Match STRING against the filename pattern PATTERN, returning zero if
+   it matches, nonzero if not.  */
+int
+fnmatch (const char *pattern, const char *string, int flags)
+{
+  register const char *p = pattern, *n = string;
+  register char c;
+
+/* Note that this evaluates C many times.  */
+# define FOLD(c) ((flags & FNM_CASEFOLD) && ISUPPER (c) ? tolower (c) : (c))
+
+  while ((c = *p++) != '\0')
+    {
+      c = FOLD (c);
+
+      switch (c)
+	{
+	case '?':
+	  if (*n == '\0')
+	    return FNM_NOMATCH;
+	  else if ((flags & FNM_FILE_NAME) && *n == '/')
+	    return FNM_NOMATCH;
+	  else if ((flags & FNM_PERIOD) && *n == '.' &&
+		   (n == string || ((flags & FNM_FILE_NAME) && n[-1] == '/')))
+	    return FNM_NOMATCH;
+	  break;
+
+	case '\\':
+	  if (!(flags & FNM_NOESCAPE))
+	    {
+	      c = *p++;
+	      if (c == '\0')
+		/* Trailing \ loses.  */
+		return FNM_NOMATCH;
+	      c = FOLD (c);
+	    }
+	  if (FOLD (*n) != c)
+	    return FNM_NOMATCH;
+	  break;
+
+	case '*':
+	  if ((flags & FNM_PERIOD) && *n == '.' &&
+	      (n == string || ((flags & FNM_FILE_NAME) && n[-1] == '/')))
+	    return FNM_NOMATCH;
+
+	  for (c = *p++; c == '?' || c == '*'; c = *p++)
+	    {
+	      if ((flags & FNM_FILE_NAME) && *n == '/')
+		/* A slash does not match a wildcard under FNM_FILE_NAME.  */
+		return FNM_NOMATCH;
+	      else if (c == '?')
+		{
+		  /* A ? needs to match one character.  */
+		  if (*n == '\0')
+		    /* There isn't another character; no match.  */
+		    return FNM_NOMATCH;
+		  else
+		    /* One character of the string is consumed in matching
+		       this ? wildcard, so *??? won't match if there are
+		       less than three characters.  */
+		    ++n;
+		}
+	    }
+
+	  if (c == '\0')
+	    return 0;
+
+	  {
+	    char c1 = (!(flags & FNM_NOESCAPE) && c == '\\') ? *p : c;
+	    c1 = FOLD (c1);
+	    for (--p; *n != '\0'; ++n)
+	      if ((c == '[' || FOLD (*n) == c1) &&
+		  fnmatch (p, n, flags & ~FNM_PERIOD) == 0)
+		return 0;
+	    return FNM_NOMATCH;
+	  }
+
+	case '[':
+	  {
+	    /* Nonzero if the sense of the character class is inverted.  */
+	    register int not;
+
+	    if (*n == '\0')
+	      return FNM_NOMATCH;
+
+	    if ((flags & FNM_PERIOD) && *n == '.' &&
+		(n == string || ((flags & FNM_FILE_NAME) && n[-1] == '/')))
+	      return FNM_NOMATCH;
+
+	    not = (*p == '!' || *p == '^');
+	    if (not)
+	      ++p;
+
+	    c = *p++;
+	    for (;;)
+	      {
+		register char cstart = c, cend = c;
+
+		if (!(flags & FNM_NOESCAPE) && c == '\\')
+		  {
+		    if (*p == '\0')
+		      return FNM_NOMATCH;
+		    cstart = cend = *p++;
+		  }
+
+		cstart = cend = FOLD (cstart);
+
+		if (c == '\0')
+		  /* [ (unterminated) loses.  */
+		  return FNM_NOMATCH;
+
+		c = *p++;
+		c = FOLD (c);
+
+		if ((flags & FNM_FILE_NAME) && c == '/')
+		  /* [/] can never match.  */
+		  return FNM_NOMATCH;
+
+		if (c == '-' && *p != ']')
+		  {
+		    cend = *p++;
+		    if (!(flags & FNM_NOESCAPE) && cend == '\\')
+		      cend = *p++;
+		    if (cend == '\0')
+		      return FNM_NOMATCH;
+		    cend = FOLD (cend);
+
+		    c = *p++;
+		  }
+
+		if (FOLD (*n) >= cstart && FOLD (*n) <= cend)
+		  goto matched;
+
+		if (c == ']')
+		  break;
+	      }
+	    if (!not)
+	      return FNM_NOMATCH;
+	    break;
+
+	  matched:;
+	    /* Skip the rest of the [...] that already matched.  */
+	    while (c != ']')
+	      {
+		if (c == '\0')
+		  /* [... (unterminated) loses.  */
+		  return FNM_NOMATCH;
+
+		c = *p++;
+		if (!(flags & FNM_NOESCAPE) && c == '\\')
+		  {
+		    if (*p == '\0')
+		      return FNM_NOMATCH;
+		    /* XXX 1003.2d11 is unclear if this is right.  */
+		    ++p;
+		  }
+	      }
+	    if (not)
+	      return FNM_NOMATCH;
+	  }
+	  break;
+
+	default:
+	  if (c != FOLD (*n))
+	    return FNM_NOMATCH;
+	}
+
+      ++n;
+    }
+
+  if (*n == '\0')
+    return 0;
+
+  if ((flags & FNM_LEADING_DIR) && *n == '/')
+    /* The FNM_LEADING_DIR flag says that "foo*" matches "foobar/frobozz".  */
+    return 0;
+
+  return FNM_NOMATCH;
+
+# undef FOLD
+}
+
+#endif	/* AROS */
+
 /*---------------------------------.
 | Alloca D to contain "DIR/FILE".  |
 `---------------------------------*/
diff -ruN a2ps-4.14/lib/title.c a2ps-4.14.aros/lib/title.c
--- a2ps-4.14/lib/title.c	2007-12-29 01:37:54.000000000 +0000
+++ a2ps-4.14.aros/lib/title.c	2021-01-19 00:12:36.850000000 +0000
@@ -28,6 +28,9 @@
 #endif
 
 #include <stdio.h>
+#ifdef STDC_HEADERS
+# include <string.h>
+#endif
 
 #if HAVE_VPRINTF || HAVE_DOPRNT || _LIBC
 # if __STDC__
diff -ruN a2ps-4.14/lib/userdata.c a2ps-4.14.aros/lib/userdata.c
--- a2ps-4.14/lib/userdata.c	2007-12-29 01:37:54.000000000 +0000
+++ a2ps-4.14.aros/lib/userdata.c	2007-12-29 03:28:03.000000000 +0000
@@ -59,12 +59,16 @@
 #endif
 
   /* Home dir. */
+#ifdef __AROS__
+  home = "/PROGDIR";
+#else
   if ((cp = getenv ("HOME")))
     home = cp;
   else if (passwd && passwd->pw_dir)
     home = passwd->pw_dir;
   else
     home = "/home";
+#endif
 
   /* Login. */
   if ((cp = getenv ("LOGNAME")))
diff -ruN a2ps-4.14/src/long-options.c a2ps-4.14.aros/src/long-options.c
--- a2ps-4.14/src/long-options.c	2007-12-29 01:33:58.000000000 +0000
+++ a2ps-4.14.aros/src/long-options.c	2021-01-19 00:13:32.640000000 +0000
@@ -21,6 +21,7 @@
 # include <config.h>
 #endif
 
+#include <stdlib.h>
 #include <stdio.h>
 #include <getopt.h>
 #include "closeout.h"
